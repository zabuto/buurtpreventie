# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'nl'
    router.request_context.scheme: '%env(WEBSITE_SCHEME)%'
    router.request_context.host: '%env(WEBSITE_HOST)%'
    router.request_context.base_url: '%env(WEBSITE_BASE_URL)%'
    asset.request_context.base_path: '%router.request_context.base_url%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is tÎ©he fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    App\EventListener\BlameSubscriber:
        tags:
            - { name: 'doctrine.event_listener', event: 'prePersist' }
            - { name: 'doctrine.event_listener', event: 'preUpdate' }

    App\EventListener\SoftDeleteSubscriber:
        tags:
            - { name: 'doctrine.event_listener', event: 'onFlush' }

    App\EventListener\TimestampSubscriber:
        tags:
            - { name: 'doctrine.event_listener', event: 'prePersist' }
            - { name: 'doctrine.event_listener', event: 'preUpdate' }

    App\Service\MailService:
        arguments:
            $siteName: 'Buurtpreventie'
            $fromName: 'Buurtpreventie'
            $fromEmail: 'noreply@buurtpreventie.nl'

    App\Service\WalkService:
        arguments:
            $walkerMinimum: 2
